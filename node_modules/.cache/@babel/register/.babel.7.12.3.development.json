{
  "{\"sourceRoot\":\"C:\\\\Users\\\\내문서\\\\Desktop\\\\original\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\내문서\\\\Desktop\\\\original\",\"filename\":\"C:\\\\Users\\\\내문서\\\\Desktop\\\\original\\\\gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\내문서\\\\Desktop\\\\original\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\내문서\\Desktop\\original\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\내문서\\Desktop\\original",
      "filename": "C:\\Users\\내문서\\Desktop\\original\\gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\내문서\\Desktop\\original",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\내문서\\Desktop\\original\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\내문서\\Desktop\\original\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\내문서\\Desktop\\original\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.dev = exports.build = void 0;\n\nvar _gulp = _interopRequireWildcard(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _ghPages = _interopRequireDefault(require(\"gh-pages\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_gulpSass[\"default\"].compiler = require('node-sass');\nvar routes = {\n  scss: {\n    src: \"src/scss/style.scss\",\n    watch: \"src/scss/**/*.scss\",\n    dest: \"build/css\"\n  }\n};\n\nvar gwatch = function gwatch() {\n  return _gulp[\"default\"].watch(routes.scss.watch, styles);\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpAutoprefixer[\"default\"])()).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar gh = function gh() {\n  return _gulp[\"default\"].src('build/**/*').pipe((0, _ghPages[\"default\"])());\n};\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build\"]);\n};\n\nvar prepare = _gulp[\"default\"].series([clean]);\n\nvar live = _gulp[\"default\"].parallel([gwatch, webserver]);\n\nvar assets = _gulp[\"default\"].series([styles]);\n\nvar build = _gulp[\"default\"].series([prepare, assets]);\n\nexports.build = build;\n\nvar dev = _gulp[\"default\"].series([build, live]);\n\nexports.dev = dev;\n\nvar deploy = _gulp[\"default\"].series([build, gh, clean]);\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJzY3NzIiwic3JjIiwid2F0Y2giLCJkZXN0IiwiZ3dhdGNoIiwiZ3VscCIsInN0eWxlcyIsInBpcGUiLCJvbiIsImxvZ0Vycm9yIiwiZ2giLCJ3ZWJzZXJ2ZXIiLCJsaXZlcmVsb2FkIiwib3BlbiIsImNsZWFuIiwicHJlcGFyZSIsInNlcmllcyIsImxpdmUiLCJwYXJhbGxlbCIsImFzc2V0cyIsImJ1aWxkIiwiZGV2IiwiZGVwbG95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQUEscUJBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxHQUFHLEVBQUUscUJBREQ7QUFFSkMsSUFBQUEsS0FBSyxFQUFFLG9CQUZIO0FBR0pDLElBQUFBLElBQUksRUFBRTtBQUhGO0FBRE8sQ0FBZjs7QUFRQSxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUztBQUFBLFNBQ2JDLGlCQUFLSCxLQUFMLENBQVdILE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRSxLQUF2QixFQUE4QkksTUFBOUIsQ0FEYTtBQUFBLENBQWY7O0FBR0EsSUFBTUEsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxTQUNiRCxpQkFDR0osR0FESCxDQUNPRixNQUFNLENBQUNDLElBQVAsQ0FBWUMsR0FEbkIsRUFFR00sSUFGSCxDQUVRLDRCQUFPQyxFQUFQLENBQVUsT0FBVixFQUFtQloscUJBQUthLFFBQXhCLENBRlIsRUFHR0YsSUFISCxDQUdRLG1DQUhSLEVBSUdBLElBSkgsQ0FJUSwyQkFKUixFQUtHQSxJQUxILENBS1FGLGlCQUFLRixJQUFMLENBQVVKLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRyxJQUF0QixDQUxSLENBRGE7QUFBQSxDQUFmOztBQVFBLElBQU1PLEVBQUUsR0FBRyxTQUFMQSxFQUFLO0FBQUEsU0FBTUwsaUJBQUtKLEdBQUwsQ0FBUyxZQUFULEVBQXVCTSxJQUF2QixDQUE0QiwwQkFBNUIsQ0FBTjtBQUFBLENBQVg7O0FBRUEsSUFBTUksU0FBUyxHQUFHLFNBQVpBLFNBQVk7QUFBQSxTQUFNTixpQkFBS0osR0FBTCxDQUFTLE9BQVQsRUFBa0JNLElBQWxCLENBQXVCLCtCQUFHO0FBQ2hESyxJQUFBQSxVQUFVLEVBQUUsSUFEb0M7QUFFaERDLElBQUFBLElBQUksRUFBRTtBQUYwQyxHQUFILENBQXZCLENBQU47QUFBQSxDQUFsQjs7QUFLQSxJQUFNQyxLQUFLLEdBQUcsU0FBUkEsS0FBUTtBQUFBLFNBQU0scUJBQUksQ0FBQyxPQUFELENBQUosQ0FBTjtBQUFBLENBQWQ7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHVixpQkFBS1csTUFBTCxDQUFZLENBQUNGLEtBQUQsQ0FBWixDQUFoQjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdaLGlCQUFLYSxRQUFMLENBQWMsQ0FBQ2QsTUFBRCxFQUFTTyxTQUFULENBQWQsQ0FBYjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdkLGlCQUFLVyxNQUFMLENBQVksQ0FBQ1YsTUFBRCxDQUFaLENBQWY7O0FBRU8sSUFBTWMsS0FBSyxHQUFHZixpQkFBS1csTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBVUksTUFBVixDQUFaLENBQWQ7Ozs7QUFDQSxJQUFNRSxHQUFHLEdBQUdoQixpQkFBS1csTUFBTCxDQUFZLENBQUNJLEtBQUQsRUFBUUgsSUFBUixDQUFaLENBQVo7Ozs7QUFDQSxJQUFNSyxNQUFNLEdBQUdqQixpQkFBS1csTUFBTCxDQUFZLENBQUNJLEtBQUQsRUFBUVYsRUFBUixFQUFZSSxLQUFaLENBQVosQ0FBZiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXOuCtOusuOyEnFxcRGVza3RvcFxcb3JpZ2luYWxcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwLCB7IHdhdGNoIH0gZnJvbSBcImd1bHBcIjtcclxuaW1wb3J0IHNhc3MgZnJvbSBcImd1bHAtc2Fzc1wiO1xyXG5pbXBvcnQgbWluaUNzcyBmcm9tIFwiZ3VscC1jc3NvXCI7XHJcbmltcG9ydCB3cyBmcm9tIFwiZ3VscC13ZWJzZXJ2ZXJcIjtcclxuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tIFwiZ3VscC1hdXRvcHJlZml4ZXJcIjtcclxuaW1wb3J0IGRlbCBmcm9tIFwiZGVsXCI7XHJcbmltcG9ydCBnaHBhZ2VzIGZyb20gXCJnaC1wYWdlc1wiO1xyXG5cclxuc2Fzcy5jb21waWxlciA9IHJlcXVpcmUoJ25vZGUtc2FzcycpO1xyXG5cclxuY29uc3Qgcm91dGVzID0ge1xyXG4gIHNjc3M6IHtcclxuICAgIHNyYzogXCJzcmMvc2Nzcy9zdHlsZS5zY3NzXCIsXHJcbiAgICB3YXRjaDogXCJzcmMvc2Nzcy8qKi8qLnNjc3NcIixcclxuICAgIGRlc3Q6IFwiYnVpbGQvY3NzXCJcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IGd3YXRjaCA9ICgpID0+XHJcbiAgZ3VscC53YXRjaChyb3V0ZXMuc2Nzcy53YXRjaCwgc3R5bGVzKTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9ICgpID0+XHJcbiAgZ3VscFxyXG4gICAgLnNyYyhyb3V0ZXMuc2Nzcy5zcmMpXHJcbiAgICAucGlwZShzYXNzKCkub24oJ2Vycm9yJywgc2Fzcy5sb2dFcnJvcikpXHJcbiAgICAucGlwZShhdXRvcHJlZml4ZXIoKSlcclxuICAgIC5waXBlKG1pbmlDc3MoKSlcclxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuc2Nzcy5kZXN0KSk7XHJcblxyXG5jb25zdCBnaCA9ICgpID0+IGd1bHAuc3JjKCdidWlsZC8qKi8qJykucGlwZShnaHBhZ2VzKCkpO1xyXG5cclxuY29uc3Qgd2Vic2VydmVyID0gKCkgPT4gZ3VscC5zcmMoXCJidWlsZFwiKS5waXBlKHdzKHtcclxuICBsaXZlcmVsb2FkOiB0cnVlLFxyXG4gIG9wZW46IHRydWVcclxufSkpXHJcblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJidWlsZFwiXSk7XHJcbmNvbnN0IHByZXBhcmUgPSBndWxwLnNlcmllcyhbY2xlYW5dKTtcclxuY29uc3QgbGl2ZSA9IGd1bHAucGFyYWxsZWwoW2d3YXRjaCwgd2Vic2VydmVyXSlcclxuY29uc3QgYXNzZXRzID0gZ3VscC5zZXJpZXMoW3N0eWxlc10pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1aWxkID0gZ3VscC5zZXJpZXMoW3ByZXBhcmUsIGFzc2V0c10pO1xyXG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW2J1aWxkLCBsaXZlXSk7XHJcbmV4cG9ydCBjb25zdCBkZXBsb3kgPSBndWxwLnNlcmllcyhbYnVpbGQsIGdoLCBjbGVhbl0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "scss",
        "src",
        "watch",
        "dest",
        "gwatch",
        "gulp",
        "styles",
        "pipe",
        "on",
        "logError",
        "gh",
        "webserver",
        "livereload",
        "open",
        "clean",
        "prepare",
        "series",
        "live",
        "parallel",
        "assets",
        "build",
        "dev",
        "deploy"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,qBADD;AAEJC,IAAAA,KAAK,EAAE,oBAFH;AAGJC,IAAAA,IAAI,EAAE;AAHF;AADO,CAAf;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACbC,iBAAKH,KAAL,CAAWH,MAAM,CAACC,IAAP,CAAYE,KAAvB,EAA8BI,MAA9B,CADa;AAAA,CAAf;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS;AAAA,SACbD,iBACGJ,GADH,CACOF,MAAM,CAACC,IAAP,CAAYC,GADnB,EAEGM,IAFH,CAEQ,4BAAOC,EAAP,CAAU,OAAV,EAAmBZ,qBAAKa,QAAxB,CAFR,EAGGF,IAHH,CAGQ,mCAHR,EAIGA,IAJH,CAIQ,2BAJR,EAKGA,IALH,CAKQF,iBAAKF,IAAL,CAAUJ,MAAM,CAACC,IAAP,CAAYG,IAAtB,CALR,CADa;AAAA,CAAf;;AAQA,IAAMO,EAAE,GAAG,SAALA,EAAK;AAAA,SAAML,iBAAKJ,GAAL,CAAS,YAAT,EAAuBM,IAAvB,CAA4B,0BAA5B,CAAN;AAAA,CAAX;;AAEA,IAAMI,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMN,iBAAKJ,GAAL,CAAS,OAAT,EAAkBM,IAAlB,CAAuB,+BAAG;AAChDK,IAAAA,UAAU,EAAE,IADoC;AAEhDC,IAAAA,IAAI,EAAE;AAF0C,GAAH,CAAvB,CAAN;AAAA,CAAlB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,OAAD,CAAJ,CAAN;AAAA,CAAd;;AACA,IAAMC,OAAO,GAAGV,iBAAKW,MAAL,CAAY,CAACF,KAAD,CAAZ,CAAhB;;AACA,IAAMG,IAAI,GAAGZ,iBAAKa,QAAL,CAAc,CAACd,MAAD,EAASO,SAAT,CAAd,CAAb;;AACA,IAAMQ,MAAM,GAAGd,iBAAKW,MAAL,CAAY,CAACV,MAAD,CAAZ,CAAf;;AAEO,IAAMc,KAAK,GAAGf,iBAAKW,MAAL,CAAY,CAACD,OAAD,EAAUI,MAAV,CAAZ,CAAd;;;;AACA,IAAME,GAAG,GAAGhB,iBAAKW,MAAL,CAAY,CAACI,KAAD,EAAQH,IAAR,CAAZ,CAAZ;;;;AACA,IAAMK,MAAM,GAAGjB,iBAAKW,MAAL,CAAY,CAACI,KAAD,EAAQV,EAAR,EAAYI,KAAZ,CAAZ,CAAf",
      "sourceRoot": "C:\\Users\\내문서\\Desktop\\original\\",
      "sourcesContent": [
        "import gulp, { watch } from \"gulp\";\r\nimport sass from \"gulp-sass\";\r\nimport miniCss from \"gulp-csso\";\r\nimport ws from \"gulp-webserver\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport del from \"del\";\r\nimport ghpages from \"gh-pages\";\r\n\r\nsass.compiler = require('node-sass');\r\n\r\nconst routes = {\r\n  scss: {\r\n    src: \"src/scss/style.scss\",\r\n    watch: \"src/scss/**/*.scss\",\r\n    dest: \"build/css\"\r\n  }\r\n}\r\n\r\nconst gwatch = () =>\r\n  gulp.watch(routes.scss.watch, styles);\r\n\r\nconst styles = () =>\r\n  gulp\r\n    .src(routes.scss.src)\r\n    .pipe(sass().on('error', sass.logError))\r\n    .pipe(autoprefixer())\r\n    .pipe(miniCss())\r\n    .pipe(gulp.dest(routes.scss.dest));\r\n\r\nconst gh = () => gulp.src('build/**/*').pipe(ghpages());\r\n\r\nconst webserver = () => gulp.src(\"build\").pipe(ws({\r\n  livereload: true,\r\n  open: true\r\n}))\r\n\r\nconst clean = () => del([\"build\"]);\r\nconst prepare = gulp.series([clean]);\r\nconst live = gulp.parallel([gwatch, webserver])\r\nconst assets = gulp.series([styles]);\r\n\r\nexport const build = gulp.series([prepare, assets]);\r\nexport const dev = gulp.series([build, live]);\r\nexport const deploy = gulp.series([build, gh, clean]);"
      ]
    },
    "sourceType": "script",
    "mtime": 1603595954643
  }
}